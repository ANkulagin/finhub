// main.go
package main

import (
	"fmt"
	"io"
	"net/http"
)

func main() {
	port := "8088"
	http.HandleFunc("/", func(w http.ResponseWriter, _ *http.Request) {
		_, _ = fmt.Fprintln(w, "‚úÖ Hello from gateway-svc!")
	})

	http.HandleFunc("/budget", func(w http.ResponseWriter, _ *http.Request) {

		resp, err := http.Get("http://budget-svc:8088/")
		if err != nil {
			// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–∏—Å—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
			http.Error(w, "Could not connect to budget-svc", http.StatusServiceUnavailable)
			fmt.Printf("Error connecting to budget-svc: %v\n", err)
			return
		}
		defer func() {
			_ = resp.Body.Close()
		}()

		// –ö–æ–ø–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ budget-svc –≤ –Ω–∞—à –æ—Ç–≤–µ—Ç
		for key, values := range resp.Header {
			for _, value := range values {
				w.Header().Add(key, value)
			}
		}

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –æ—Ç–≤–µ—Ç–∞ —Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ —É budget-svc
		w.WriteHeader(resp.StatusCode)

		// –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç budget-svc –Ω–∞–ø—Ä—è–º—É—é –≤ –Ω–∞—à –æ—Ç–≤–µ—Ç
		_, _ = io.Copy(w, resp.Body)
	})

	http.HandleFunc("/metrics", func(w http.ResponseWriter, _ *http.Request) {
		_, _ = fmt.Fprintln(w, "# FAKE metrics for gateway-svc")
	})

	fmt.Println("üöÄ Starting gateway-svc on port", port)
	if err := http.ListenAndServe(":"+port, nil); err != nil {
		panic(err)
	}
}
